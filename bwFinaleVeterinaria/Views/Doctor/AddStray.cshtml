
@{
    ViewBag.Title = "AddStray";
}

@model bwFinaleVeterinaria.Models.PetRescueViewModel

<h2>Aggiungi Animale Randagio</h2>

<p>Compila il form per salvare l'animale nel database</p>

@if (TempData["Success"] != null)
{
    <div class="my-5 alert alert-success alert-dismissible fade show" role="alert">

        <p>@TempData["Success"]</p>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="">
    @using (Html.BeginForm("AddStray", "Doctor"))
    {
        <div class="form-group">
            @Html.LabelFor(rescue => rescue.Pet.Name, "Inserisci Nome dell'Animale:")
            @Html.EditorFor(rescue => rescue.Pet.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(rescue => rescue.Pet.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(rescue => rescue.Pet.Type, "Inserisci la tipologia di Animale:")
            @Html.EditorFor(rescue => rescue.Pet.Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(rescue => rescue.Pet.Type, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(rescue => rescue.Pet.RegistrationDate, "Inserisci Data di Registrazione:")
            @Html.EditorFor(rescue => rescue.Pet.RegistrationDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
            @Html.ValidationMessageFor(rescue => rescue.Pet.RegistrationDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(rescue => rescue.Pet.CoatColor, "Inserisci il colore del Manto:")
            @Html.EditorFor(rescue => rescue.Pet.CoatColor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(rescue => rescue.Pet.CoatColor, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(rescue => rescue.Pet.Microchip, "Inserisci il codice Microchip (se lo possiede):")
            @Html.EditorFor(rescue => rescue.Pet.Microchip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(rescue => rescue.Pet.Microchip, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(rescue => rescue.RescueAdmission.AdmissionDate, "Data di Accetazione nella Struttura:")
            @Html.EditorFor(rescue => rescue.RescueAdmission.AdmissionDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
            @Html.ValidationMessageFor(rescue => rescue.RescueAdmission.AdmissionDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(rescue => rescue.RescueAdmission.PetImageUrl, "Immagine URL dell'Animale:")
            @Html.EditorFor(rescue => rescue.RescueAdmission.PetImageUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(rescue => rescue.RescueAdmission.PetImageUrl, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(rescue => rescue.RescueAdmission.Price, "Tariffa Giornaliera per Ricovero:")
            @Html.EditorFor(rescue => rescue.RescueAdmission.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(rescue => rescue.RescueAdmission.Price, "", new { @class = "text-danger" })
        </div>

        <button type="submit">Salva Randagio</button>

    }
</div>



@*@if (TempData["Error"] != null)
    {
        <div class="my-5 alert alert-danger alert-dismissible fade show" role="alert">
            <p>@TempData["Error"]</p>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }*@