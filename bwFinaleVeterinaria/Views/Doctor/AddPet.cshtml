
@{
    ViewBag.Title = "AddPet";
}

@model bwFinaleVeterinaria.Models.Pet



@if (TempData["Success"] != null)
{
    <div class="my-5 alert alert-success alert-dismissible fade show" role="alert">

        <p>@TempData["Success"]</p>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="my-5 alert alert-danger alert-dismissible fade show" role="alert">
        <p>@TempData["Error"]</p>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<section class="main-content">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-group fix-margin-bottom">
            <h2>Aggiungi Animale</h2>

            <select name="ownerId" id="ownerId" class="form-control">
                <option value="-1">--- Seleziona Proprietario ---</option>
                @foreach (var owner in TempData["owners"] as List<bwFinaleVeterinaria.Models.Owner>)
                {
                    <option value="@owner.Id">@owner.Name @owner.Surname | @owner.FiscalCode</option>
                }
            </select>

            <div>
                <p>Il proprietario non è presente nel Database? </p>
                <a class="btn light-btn" href="@Url.Action("AddOwner")">Aggiungi Proprietario</a>
            </div>
        </div>

        <div class="right-group">
            <div class="form-group">
                @Html.LabelFor(p => p.Name, "Inserisci Nome dell'Animale:")
                @Html.EditorFor(p => p.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(p => p.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.Type, "Inserisci che tipo di animale sia:")
                @Html.EditorFor(p => p.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(p => p.Type, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.RegistrationDate, "Inserisci la Data di Registrazione:")
                @Html.EditorFor(p => p.RegistrationDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                @Html.ValidationMessageFor(p => p.RegistrationDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.CoatColor, "Inserisci il colore del Manto:")
                @Html.EditorFor(p => p.CoatColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(p => p.CoatColor, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.BirthDate, "Inserisci la Data di Nascita:")
                @Html.EditorFor(p => p.BirthDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                @Html.ValidationMessageFor(p => p.BirthDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.Microchip, "Inserisci il Codice Microchip (15 caratteri):")
                @Html.EditorFor(p => p.Microchip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(p => p.Microchip, "", new { @class = "text-danger" })
            </div>

            <div>
            <button class="btn light-btn" type="submit">Aggiungi Animale</button>
            <a href="@Url.Action("Index")" class="btn">Torna Indietro</a>
            </div>
        </div>
    }
</section>


@section styles {
    <style>

        a {
            color: var(--dAzure);
        }

        /* SELECT */
        #ownerId {
            min-width: 400px;
            text-align:center;
            padding: 10px 25px;
        }
      

        /* FORM */

        .main-content {
            width: 100%;
            height:100vh;
            margin-top:0;
        }
        .main-content form {
            width:100%;
            height:80%;
            display:flex;
            gap: 6rem;
            align-items: center;
            justify-content:center;
        }

        .right-group {
            display:flex;
            justify-content:center;
            flex-direction: column;
     
        }

        .right-group input {
            width: 300px;
        }

        .main-content label {
            font-weight:bold;
            color: var(--azure);
        }

        .main-content label:not(first) {
            margin-top: 10px;
            margin-bottom: 3px;
        }

        .main-content .fix-margin-bottom {
            margin-bottom: 14rem;
        }

        .main-content form h2 {
            font-size: 3rem;
            margin-bottom: 2rem;
            color: var(--dAzure);
        }

        .main-content form p {
            margin-top: 20px;
            margin-bottom: 5px;
        }

        .main-content form .btn {
            background-color: var(--dAzure);
            margin-top: 25px;
            color: white;
        }

        .form-control:focus {
            border-color: var(--azure) !important;
            box-shadow: 0 0 0 0.2rem var(--azure) !important;
        }

        .main-content .light-btn {
            background-color: var(--azure) !important;
        }

            .main-content .btn:hover, .main-content .light-btn:hover {
                background-color: var(--btnHoverDoctor) !important;
                color: white;
            }

    </style>
}